>>> add_integer = __import__('0-add_integer').add_integer
>>> print(add_integer(1, 2))
3
>>> print(add_integer(100, -2))
98
>>> print(add_integer(2))
100
>>> print(add_integer(100.3, -2))
98

>>> add_integer = __import__('0-add_integer').add_integer
>>> print(add_integer(4, "School"))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adesina/Documents/alx-software_engineering/daadesina1/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 13, in add_integer
    raise TypeError('b must be an integer')
TypeError: b must be an integer

>>> print(add_integer(None))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adesina/Documents/alx-software_engineering/daadesina1/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 11, in add_integer
    raise TypeError('a must be an integer')
TypeError: a must be an integer

>>> print(add_integer(1.7976931348623157e+318, 100))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/adesina/Documents/alx-software_engineering/daadesina1/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 7, in add_integer
    
OverflowError: cannot convert float infinity to integer
>>> 
